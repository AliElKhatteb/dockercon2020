FROM ruby:2.7.0-slim-buster AS build-env
ARG RAILS_ROOT=/usr/src/app/alpha-blog
ARG BUILD_PACKAGES=""
ARG DEV_PACKAGES="build-essential patch ruby-dev zlib1g-dev liblzma-dev libpq-dev libsqlite3-dev"
ARG RUBY_PACKAGES="tzdata"
ENV RAILS_ENV=production
ENV BUNDLE_APP_CONFIG="$RAILS_ROOT/.bundle"
WORKDIR $RAILS_ROOT
# install packages
RUN apt-get update \
    && apt-get install -y $BUILD_PACKAGES $DEV_PACKAGES $RUBY_PACKAGES
COPY Gemfile* package.json ./
# install rubygem
COPY Gemfile Gemfile.lock $RAILS_ROOT/
ENV BUNDLER_VERSION 2.1.2
RUN bundle config --global frozen 1 \
    && bundle install --without development:test:assets -j4 --retry 3 --path=vendor/bundle \
    # Remove unneeded files (cached *.gem, *.o, *.c)
    && rm -rf vendor/bundle/ruby/2.7.0/cache/*.gem \
    && find vendor/bundle/ruby/2.7.0/gems/ -name "*.c" -delete \
    && find vendor/bundle/ruby/2.7.0/gems/ -name "*.o" -delete

COPY . .
RUN bin/rails webpacker:compile
RUN bin/rails assets:precompile
# Remove folders not needed in resulting image
RUN rm -rf node_modules tmp/cache app/assets vendor/assets spec


############### Build step done ###############
FROM ruby:2.7.0-slim-buster
ARG RAILS_ROOT=/usr/src/app/alpha-blog
ARG PACKAGES="tzdata"
ENV RAILS_ENV=production
ENV BUNDLE_APP_CONFIG="$RAILS_ROOT/.bundle"
WORKDIR $RAILS_ROOT
# install packages
RUN apt-get update \
    && apt-get install -y $PACKAGES
COPY --from=build-env $RAILS_ROOT $RAILS_ROOT
EXPOSE 3000
CMD ["rails", "server", "-b", "0.0.0.0"]